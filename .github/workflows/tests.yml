name: Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  phpunit:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: larafeed_test
          POSTGRES_USER: larafeed
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U larafeed"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      APP_ENV: testing
      APP_KEY: base64:1qZ0b9E93sKOG5XQ3YwKwcjwXDf+ZFIzuD0kZwIUSnA=
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: larafeed_test
      DB_SCHEMA: public
      DB_USERNAME: larafeed
      DB_PASSWORD: password
      MAIL_MAILER: log
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      TELESCOPE_ENABLED: false
      TELEGRAM_BOT_TOKEN: ""
      TELEGRAM_CHAT_ID: ""
    steps:
      - uses: actions/checkout@v5

      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          coverage: none
          extensions: pdo_pgsql, pgsql, pcntl, bcmath, intl

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --ansi

      - name: Ensure environment file exists
        run: php -r "file_exists('.env') || touch('.env');"

      - name: Wait for database
        run: >
          php -r "
          for ($i = 0; $i < 30; $i++) {
              try {
                  new PDO('pgsql:host=127.0.0.1;port=5432;dbname=larafeed_test', 'larafeed', 'password');
                  exit(0);
              } catch (PDOException $e) {
                  sleep(1);
              }
          }
          exit(1);
          "

      - name: Run test suite
        run: php artisan test
